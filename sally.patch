Only in src/antenna/bindings: callbacks_list.pyc
Only in src/antenna/bindings: modulegen__gcc_ILP32.pyc
Only in src/aodv/bindings: callbacks_list.pyc
Only in src/aodv/bindings: modulegen__gcc_ILP32.pyc
diff -rauB /home/mohammad/repos/ns-original/ns-allinone-3.18.2/ns-3.18.1/src/aodv/model/aodv-routing-protocol.cc src/aodv/model/aodv-routing-protocol.cc
--- /home/mohammad/repos/ns-original/ns-allinone-3.18.2/ns-3.18.1/src/aodv/model/aodv-routing-protocol.cc	2013-11-15 21:50:31.000000000 +0000
+++ src/aodv/model/aodv-routing-protocol.cc	2013-12-28 00:33:15.387375478 +0000
@@ -41,6 +41,7 @@
 #include "ns3/pointer.h"
 #include <algorithm>
 #include <limits>
+#include "ns3/trace-source-accessor.h"
 
 NS_LOG_COMPONENT_DEFINE ("AodvRoutingProtocol");
 
@@ -252,6 +253,10 @@
                    StringValue ("ns3::UniformRandomVariable"),
                    MakePointerAccessor (&RoutingProtocol::m_uniformRandomVariable),
                    MakePointerChecker<UniformRandomVariable> ())
+   .AddTraceSource ("Rx", "Receive OLSR packet.",
+				MakeTraceSourceAccessor (&RoutingProtocol::m_rxPacketTrace))
+   .AddTraceSource ("Tx", "Send OLSR packet.",
+					MakeTraceSourceAccessor (&RoutingProtocol::m_txPacketTrace))
   ;
   return tid;
 }
@@ -906,6 +912,7 @@
 void
 RoutingProtocol::SendTo (Ptr<Socket> socket, Ptr<Packet> packet, Ipv4Address destination)
 {
+	m_txPacketTrace (0);
     socket->SendTo (packet, 0, InetSocketAddress (destination, AODV_PORT));
 
 }
@@ -943,6 +950,8 @@
   UpdateRouteToNeighbor (sender, receiver);
   TypeHeader tHeader (AODVTYPE_RREQ);
   packet->RemoveHeader (tHeader);
+  m_rxPacketTrace (0);
+
   if (!tHeader.IsValid ())
     {
       NS_LOG_DEBUG ("AODV message " << packet->GetUid () << " with unknown type received: " << tHeader.Get () << ". Drop");
diff -rauB /home/mohammad/repos/ns-original/ns-allinone-3.18.2/ns-3.18.1/src/aodv/model/aodv-routing-protocol.h src/aodv/model/aodv-routing-protocol.h
--- /home/mohammad/repos/ns-original/ns-allinone-3.18.2/ns-3.18.1/src/aodv/model/aodv-routing-protocol.h	2013-11-15 21:50:31.000000000 +0000
+++ src/aodv/model/aodv-routing-protocol.h	2013-12-28 00:25:23.107357949 +0000
@@ -40,6 +40,7 @@
 #include "ns3/ipv4-interface.h"
 #include "ns3/ipv4-l3-protocol.h"
 #include <map>
+#include "ns3/traced-callback.h"
 
 namespace ns3
 {
@@ -268,6 +269,9 @@
   Ptr<UniformRandomVariable> m_uniformRandomVariable;  
   /// Keep track of the last bcast time
   Time m_lastBcastTime;
+
+  TracedCallback <uint32_t> m_rxPacketTrace;
+  TracedCallback <uint32_t> m_txPacketTrace;
 };
 
 }
Only in src/applications/bindings: callbacks_list.pyc
Only in src/applications/bindings: modulegen_customizations.pyc
Only in src/applications/bindings: modulegen__gcc_ILP32.pyc
Only in src/bridge/bindings: callbacks_list.pyc
Only in src/bridge/bindings: modulegen__gcc_ILP32.pyc
Only in src/buildings/bindings: callbacks_list.pyc
Only in src/buildings/bindings: modulegen__gcc_ILP32.pyc
Only in src/config-store/bindings: callbacks_list.pyc
Only in src/config-store/bindings: modulegen_customizations.pyc
Only in src/config-store/bindings: modulegen__gcc_ILP32.pyc
Only in src/core/bindings: callbacks_list.pyc
Only in src/core/bindings: modulegen_customizations.pyc
Only in src/core/bindings: modulegen__gcc_ILP32.pyc
Only in src/: .cproject
Only in src/csma/bindings: callbacks_list.pyc
Only in src/csma/bindings: modulegen_customizations.pyc
Only in src/csma/bindings: modulegen__gcc_ILP32.pyc
Only in src/csma-layout/bindings: callbacks_list.pyc
Only in src/csma-layout/bindings: modulegen__gcc_ILP32.pyc
Only in src/dsdv/bindings: callbacks_list.pyc
Only in src/dsdv/bindings: modulegen__gcc_ILP32.pyc
Only in src/dsr/bindings: callbacks_list.pyc
Only in src/dsr/bindings: modulegen__gcc_ILP32.pyc
Only in src/emu/bindings: callbacks_list.pyc
Only in src/emu/bindings: modulegen_customizations.pyc
Only in src/emu/bindings: modulegen__gcc_ILP32.pyc
Only in src/energy/bindings: callbacks_list.pyc
Only in src/energy/bindings: modulegen__gcc_ILP32.pyc
Only in src/fd-net-device/bindings: callbacks_list.pyc
Only in src/fd-net-device/bindings: modulegen_customizations.pyc
Only in src/fd-net-device/bindings: modulegen__gcc_ILP32.pyc
Only in src/flow-monitor/bindings: callbacks_list.pyc
Only in src/flow-monitor/bindings: modulegen__gcc_ILP32.pyc
Only in src/internet/bindings: callbacks_list.pyc
Only in src/internet/bindings: modulegen__gcc_ILP32.pyc
diff -rauB /home/mohammad/repos/ns-original/ns-allinone-3.18.2/ns-3.18.1/src/internet/model/ipv4-list-routing.h src/internet/model/ipv4-list-routing.h
--- /home/mohammad/repos/ns-original/ns-allinone-3.18.2/ns-3.18.1/src/internet/model/ipv4-list-routing.h	2013-11-15 21:50:31.000000000 +0000
+++ src/internet/model/ipv4-list-routing.h	2013-12-27 15:30:41.270167237 +0000
@@ -87,15 +87,15 @@
   virtual void NotifyRemoveAddress (uint32_t interface, Ipv4InterfaceAddress address);
   virtual void SetIpv4 (Ptr<Ipv4> ipv4);
   virtual void PrintRoutingTable (Ptr<OutputStreamWrapper> stream) const;
-
+  typedef std::pair<int16_t, Ptr<Ipv4RoutingProtocol> > Ipv4RoutingProtocolEntry;
+  typedef std::list<Ipv4RoutingProtocolEntry> Ipv4RoutingProtocolList;
+  Ipv4RoutingProtocolList m_routingProtocols;
 protected:
   void DoDispose (void);
   void DoInitialize (void);
 private:
-  typedef std::pair<int16_t, Ptr<Ipv4RoutingProtocol> > Ipv4RoutingProtocolEntry;
-  typedef std::list<Ipv4RoutingProtocolEntry> Ipv4RoutingProtocolList;
-  Ipv4RoutingProtocolList m_routingProtocols;
   static bool Compare (const Ipv4RoutingProtocolEntry& a, const Ipv4RoutingProtocolEntry& b);
+protected:
   Ptr<Ipv4> m_ipv4;
 
 };
Only in src/lte/bindings: callbacks_list.pyc
Only in src/lte/bindings: modulegen__gcc_ILP32.pyc
Only in src/mesh/bindings: callbacks_list.pyc
Only in src/mesh/bindings: modulegen__gcc_ILP32.pyc
Only in src/mobility/bindings: callbacks_list.pyc
Only in src/mobility/bindings: modulegen__gcc_ILP32.pyc
Only in src/mpi/bindings: callbacks_list.pyc
Only in src/mpi/bindings: modulegen__gcc_ILP32.pyc
Only in src/network/bindings: callbacks_list.pyc
Only in src/network/bindings: modulegen__gcc_ILP32.pyc
Only in src/nix-vector-routing/bindings: callbacks_list.pyc
Only in src/nix-vector-routing/bindings: modulegen__gcc_ILP32.pyc
Only in src/olsr/bindings: callbacks_list.pyc
Only in src/olsr/bindings: modulegen__gcc_ILP32.pyc
diff -rauB /home/mohammad/repos/ns-original/ns-allinone-3.18.2/ns-3.18.1/src/olsr/model/olsr-routing-protocol.h src/olsr/model/olsr-routing-protocol.h
--- /home/mohammad/repos/ns-original/ns-allinone-3.18.2/ns-3.18.1/src/olsr/model/olsr-routing-protocol.h	2013-11-15 21:50:32.000000000 +0000
+++ src/olsr/model/olsr-routing-protocol.h	2013-12-27 15:47:57.318205691 +0000
@@ -132,22 +132,57 @@
   /// Inject Associations from an Ipv4StaticRouting instance
   void SetRoutingTableAssociation (Ptr<Ipv4StaticRouting> routingTable);
 
+  /// Willingness for forwarding packets on behalf of other nodes.
+    uint8_t m_willingness;
+
+    // From Ipv4RoutingProtocol
+      virtual Ptr<Ipv4Route> RouteOutput (Ptr<Packet> p,
+                                          const Ipv4Header &header,
+                                          Ptr<NetDevice> oif,
+                                          Socket::SocketErrno &sockerr);
+      virtual bool RouteInput (Ptr<const Packet> p,
+                               const Ipv4Header &header,
+                               Ptr<const NetDevice> idev,
+                               UnicastForwardCallback ucb,
+                               MulticastForwardCallback mcb,
+                               LocalDeliverCallback lcb,
+                               ErrorCallback ecb);
+      virtual void SetIpv4 (Ptr<Ipv4> ipv4);
+      virtual void SendTc ();
+      Ptr<Ipv4> m_ipv4;
+      // Timer handlers
+      Timer m_helloTimer;
+      void HelloTimerExpire ();
+
+      Timer m_tcTimer;
+      void TcTimerExpire ();
+
+      Timer m_midTimer;
+      void MidTimerExpire ();
+
+      Timer m_hnaTimer;
+      void HnaTimerExpire ();
+
+      Timer m_queuedMessagesTimer; // timer for throttling outgoing messages
+	  void SendQueuedMessages ();
+
+	  /// Packets sequence number counter.
+	    uint16_t m_packetSequenceNumber;
+	    /// Messages sequence number counter.
+	    uint16_t m_messageSequenceNumber;
+	    /// Advertised Neighbor Set sequence number.
+	    uint16_t m_ansn;
+
+	    bool m_linkTupleTimerFirstTime;
+	    Ptr<Ipv4StaticRouting> m_hnaRoutingTable;
+	    OlsrState m_state;
 protected:
   virtual void DoInitialize (void);
 private:
   std::map<Ipv4Address, RoutingTableEntry> m_table; ///< Data structure for the routing table.
 
-  Ptr<Ipv4StaticRouting> m_hnaRoutingTable;
-
   EventGarbageCollector m_events;
 	
-  /// Packets sequence number counter.
-  uint16_t m_packetSequenceNumber;
-  /// Messages sequence number counter.
-  uint16_t m_messageSequenceNumber;
-  /// Advertised Neighbor Set sequence number.
-  uint16_t m_ansn;
-
   /// HELLO messages' emission interval.
   Time m_helloInterval;
   /// TC messages' emission interval.
@@ -156,13 +191,9 @@
   Time m_midInterval;
   /// HNA messages' emission interval.
   Time m_hnaInterval;
-  /// Willingness for forwarding packets on behalf of other nodes.
-  uint8_t m_willingness;
 
-  /// Internal state with all needed data structs.
-  OlsrState m_state;
 
-  Ptr<Ipv4> m_ipv4;
+  /// Internal state with all needed data structs.
 
   void Clear ();
   uint32_t GetSize () const { return m_table.size (); }
@@ -180,23 +211,10 @@
   bool FindSendEntry (const RoutingTableEntry &entry,
                       RoutingTableEntry &outEntry) const;
 
-  // From Ipv4RoutingProtocol
-  virtual Ptr<Ipv4Route> RouteOutput (Ptr<Packet> p,
-                                      const Ipv4Header &header,
-                                      Ptr<NetDevice> oif,
-                                      Socket::SocketErrno &sockerr);
-  virtual bool RouteInput (Ptr<const Packet> p,
-                           const Ipv4Header &header,
-                           Ptr<const NetDevice> idev,
-                           UnicastForwardCallback ucb,
-                           MulticastForwardCallback mcb,
-                           LocalDeliverCallback lcb,
-                           ErrorCallback ecb);
   virtual void NotifyInterfaceUp (uint32_t interface);
   virtual void NotifyInterfaceDown (uint32_t interface);
   virtual void NotifyAddAddress (uint32_t interface, Ipv4InterfaceAddress address);
   virtual void NotifyRemoveAddress (uint32_t interface, Ipv4InterfaceAddress address);
-  virtual void SetIpv4 (Ptr<Ipv4> ipv4);
   virtual void PrintRoutingTable (Ptr<OutputStreamWrapper> stream) const;
 
   void DoDispose ();
@@ -215,21 +233,7 @@
   Ipv4Address GetMainAddress (Ipv4Address iface_addr) const;
   bool UsesNonOlsrOutgoingInterface (const Ipv4RoutingTableEntry &route);
 
-  // Timer handlers
-  Timer m_helloTimer;
-  void HelloTimerExpire ();
-
-  Timer m_tcTimer;
-  void TcTimerExpire ();
-
-  Timer m_midTimer;
-  void MidTimerExpire ();
-
-  Timer m_hnaTimer;
-  void HnaTimerExpire ();
-
   void DupTupleTimerExpire (Ipv4Address address, uint16_t sequenceNumber);
-  bool m_linkTupleTimerFirstTime;
   void LinkTupleTimerExpire (Ipv4Address neighborIfaceAddr);
   void Nb2hopTupleTimerExpire (Ipv4Address neighborMainAddr, Ipv4Address twoHopNeighborAddr);
   void MprSelTupleTimerExpire (Ipv4Address mainAddr);
@@ -241,16 +245,14 @@
 
   /// A list of pending messages which are buffered awaiting for being sent.
   olsr::MessageList m_queuedMessages;
-  Timer m_queuedMessagesTimer; // timer for throttling outgoing messages
+
 
   void ForwardDefault (olsr::MessageHeader olsrMessage,
                        DuplicateTuple *duplicated,
                        const Ipv4Address &localIface,
                        const Ipv4Address &senderAddress);
   void QueueMessage (const olsr::MessageHeader &message, Time delay);
-  void SendQueuedMessages ();
   void SendHello ();
-  void SendTc ();
   void SendMid ();
   void SendHna ();
 
Only in src/point-to-point/bindings: callbacks_list.pyc
Only in src/point-to-point/bindings: modulegen_customizations.pyc
Only in src/point-to-point/bindings: modulegen__gcc_ILP32.pyc
Only in src/point-to-point-layout/bindings: callbacks_list.pyc
Only in src/point-to-point-layout/bindings: modulegen__gcc_ILP32.pyc
Only in src/: .project
Only in src/propagation/bindings: callbacks_list.pyc
Only in src/propagation/bindings: modulegen_customizations.pyc
Only in src/propagation/bindings: modulegen__gcc_ILP32.pyc
Only in src/: sally
Only in src/spectrum/bindings: callbacks_list.pyc
Only in src/spectrum/bindings: modulegen__gcc_ILP32.pyc
Only in src/stats/bindings: callbacks_list.pyc
Only in src/stats/bindings: modulegen_customizations.pyc
Only in src/stats/bindings: modulegen__gcc_ILP32.pyc
Only in src/tap-bridge/bindings: callbacks_list.pyc
Only in src/tap-bridge/bindings: modulegen_customizations.pyc
Only in src/tap-bridge/bindings: modulegen__gcc_ILP32.pyc
Only in src/topology-read/bindings: callbacks_list.pyc
Only in src/topology-read/bindings: modulegen__gcc_ILP32.pyc
Only in src/uan/bindings: callbacks_list.pyc
Only in src/uan/bindings: modulegen__gcc_ILP32.pyc
Only in src/virtual-net-device/bindings: callbacks_list.pyc
Only in src/virtual-net-device/bindings: modulegen__gcc_ILP32.pyc
Only in src/wifi/bindings: callbacks_list.pyc
Only in src/wifi/bindings: modulegen_customizations.pyc
Only in src/wifi/bindings: modulegen__gcc_ILP32.pyc
Only in src/wimax/bindings: callbacks_list.pyc
Only in src/wimax/bindings: modulegen__gcc_ILP32.pyc
